  SELECT
      bill_type, 
      operating_unit,
      bill_no,
      pdf_serial_number,
      bill_date,
      bill_heading,
      customer_name,
      bill_to_address,
      address1, address2, address3, address4,
      city,
      (select TERRITORY_SHORT_NAME from FND_TERRITORIES_TL@erpprod.tristar.com where TERRITORY_CODE = country and language = 'US' and rownum =1) country,
      REGISTRATION_NUMBER,
      tax_reg_no,
      ADDRESS,
      COMPANY_NAME_HEADER,
      HEADER_ADDRESS_LINE1,
      HEADER_ADDRESS_LINE2,
      FOOTER_LINE3,
      FOOTER_LINE4,
      FOOTER_LINE5,
      FOOTER_LINE6,
      period,
      lpo_ref,
      due_date,
      exch_rate,
      charge_description,
      product_type,
      quantity,
      qty_uom,
      to_char(rate,'999,999,990.9990') rate,
      rate_uom,
      to_char(vat_amount,'999,999,990.90') vat_amount,
      substr(vat,1,3) vat,    
      currency,
      to_char(NET_VAT,'999,999,990.90') NET_VAT,
      to_char(total,'999,999,990.90') total,
      to_char(amount,'999,999,990.90') amount,
      to_char(NET_AMOUNT,'999,999,990.90') NET_AMOUNT,
      to_char(NET_TOTAL,'999,999,990.90') NET_TOTAL,
      

  ---> 03-06-2024 S

      CASE
      WHEN nvl(NET_TOTAL, 0) = 0 THEN
          'Zero'
      WHEN instr(NET_TOTAL, '.') > 0 THEN
          CASE WHEN to_number(substr(NET_TOTAL, 1, instr(NET_TOTAL, '.') - 1)) BETWEEN 1 AND 5373484 THEN
                  to_char(
                      TO_DATE(substr(NET_TOTAL, 1, instr(NET_TOTAL, '.') - 1), 'J'), 
                      'Jsp'
                  )
                  || ' And '
                  || CASE
                      WHEN to_number(substr(to_char(NET_TOTAL, '9999999.99'), instr(to_char(NET_TOTAL, '9999999.99'), '.') + 1)) BETWEEN 1 AND 5373484 THEN
                          to_char(
                              TO_DATE(substr(to_char(NET_TOTAL, '9999999.99'), instr(to_char(NET_TOTAL, '9999999.99'), '.') + 1), 'J'), 
                              'Jsp'
                          )
                      ELSE
                          'Invalid fractional part'
                  END
                  || ' ' || decode(CONTRACT_CURRENCY, 'OMR', 'BAIZA', 'USD', 'CENTS', 'AED', 'FILS', 'FILS')
                  || ' Only'
              ELSE
                  'As per Numerical Value'
          END
      ELSE
          CASE WHEN to_number(NET_TOTAL) BETWEEN 1 AND 5373484 THEN
                  to_char(TO_DATE(NET_TOTAL, 'J'), 'Jsp') || ' Only'
              
              ELSE
                  'As per Numerical Value'
          END
      END AS net_total_words,

  -->03-06-2024 E

      to_char(NET_AMOUNT,'999999990.90') NET_AMOUNT_CHART,
      to_char(NET_VAT,'999999990.90') NET_VAT_CHART,
      to_char(NET_TOTAL,'999999990.90') NET_TOTAL_CHART, 

      case when (select count(1) from cbs_bills_stg cp where cp.bill_no = bp.bill_no and cp.currency != 'AED' and cp.contract_currency != 'AED') > 0 then
          to_char(NET_AMOUNT*f_get_bill_aed_convrate(bp.bill_no),'999999990.90')
      else
          to_char(NET_AMOUNT*CONV_RATE_DISP,'999999990.90')
      end NET_AMOUNT_CNV,
      
      case when (select count(1) from cbs_bills_stg cp where cp.bill_no = bp.bill_no and cp.currency != 'AED' and cp.contract_currency != 'AED') > 0 then
          to_char(NET_VAT*f_get_bill_aed_convrate(bp.bill_no),'999999990.90') 
      else
          to_char(NET_VAT*CONV_RATE_DISP,'999999990.90')
      end NET_VAT_CNV,
      
      case when (select count(1) from cbs_bills_stg cp where cp.bill_no = bp.bill_no and cp.currency != 'AED' and cp.contract_currency != 'AED') > 0 then
          to_char(NET_TOTAL*f_get_bill_aed_convrate(bp.bill_no),'999999990.90') 
      else
          to_char(NET_TOTAL*CONV_RATE_DISP,'999999990.90')
      end NET_TOTAL_CNV,

      group_code,
      attribute1,
      attribute2, 
      contract_currency,
      CONV_RATE_DISP,
      f_get_carbon_emission(bill_no) carbon_emission,

      case when (select count(1) from cbs_bills_stg cp where cp.bill_no = bp.bill_no and cp.currency != 'AED' and cp.contract_currency != 'AED') > 0 then
          to_char(vat_amount*f_get_bill_aed_convrate(bp.bill_no),'999,999,990.90')
      else
          to_char(vat_amount*CONV_RATE_DISP,'999,999,990.90')
      end vat_amount_disp,

      case when (select count(1) from cbs_bills_stg cp where cp.bill_no = bp.bill_no and cp.currency != 'AED' and cp.contract_currency != 'AED') > 0 then
          'AED'
      else
          (select currency from cbs_bills_stg cp where cp.bill_no = bp.bill_no)
      end curr_disp
  FROM (	
  SELECT 
      bill_type, 
      operating_unit,
      bill_no,
      pdf_serial_number,
      bill_date
      ,
      bill_heading,
      customer_name,
      bill_to_address,
      address1, address2, address3, address4,
      city,
      country,
      REGISTRATION_NUMBER,
      tax_reg_no,
      ADDRESS,
      COMPANY_NAME_HEADER,
      HEADER_ADDRESS_LINE1,
      HEADER_ADDRESS_LINE2,
      FOOTER_LINE3,
      FOOTER_LINE4,
      FOOTER_LINE5,
      FOOTER_LINE6,
      period,
      lpo_ref,
      due_date,
      exch_rate,
      charge_description,
      product_type,
      quantity,
      qty_uom,
      rate,
      rate_uom,
      total,
      vat,
      vat_amount,
      currency,
      amount,
      round(SUM(amount) OVER (),2) AS NET_AMOUNT,
      round(SUM(vat_amount) OVER (),2) AS NET_VAT,
      round(SUM(total) OVER (),2) AS NET_TOTAL,       
      group_code,
      attribute1,
      attribute2, 
      contract_currency,
      CONV_RATE_DISP
  FROM  (
  SELECT 
      bill_type, 
      operating_unit,
      bill_no,
      pdf_serial_number,
      bill_date,
      bill_heading,
      customer_name,
      bill_to_address,
      address1,
      address2,
      address3,
      address4,    
      city,
      country,
      REGISTRATION_NUMBER,
      tax_reg_no,
      ADDRESS,
      COMPANY_NAME_HEADER,
      HEADER_ADDRESS_LINE1,
      HEADER_ADDRESS_LINE2,
      FOOTER_LINE3,
      FOOTER_LINE4,
      FOOTER_LINE5,
      FOOTER_LINE6,
      period,
      lpo_ref,
      due_date,
      exch_rate,
      charge_description,
      product_type,
      quantity,
      qty_uom,
      rate,
      rate_uom,
      total,
      vat,
      vat_amount,
      currency,
      amount,
      round(SUM(amount) OVER (),2) AS NET_AMOUNT,
      round(SUM(vat_amount) OVER (),2) AS NET_VAT,
      round(SUM(total) OVER (),2) AS NET_TOTAL,
      group_code,
      attribute1,
      attribute2,
      contract_currency,
      CONV_RATE_DISP
  FROM (    
  SELECT
      bill_type, 
      operating_unit,
      bill_no,
      pdf_serial_number,
      bill_date,
      case when status like 'Draft%' then 'DRAFT - TAX INVOICE' else 'TAX INVOICE' end bill_heading,
      customer_name,
      bill_to_address,
      address1,
      address2,
      address3,
      address4,    
      city,
      country,
      REGISTRATION_NUMBER,
      (select TAX_REG_NO from CBS_LOOKUP_REG_NO where ou = operating_unit) tax_reg_no,    
      (select ADDRESS from CBS_LOOKUP_REG_NO where ou = operating_unit) ADDRESS,
      (select COMPANY_NAME_HEADER from CBS_LOOKUP_REG_NO where ou = operating_unit) COMPANY_NAME_HEADER,
      (select HEADER_ADDRESS_LINE1 from CBS_LOOKUP_REG_NO where ou = operating_unit) HEADER_ADDRESS_LINE1,
      (select HEADER_ADDRESS_LINE2 from CBS_LOOKUP_REG_NO where ou = operating_unit) HEADER_ADDRESS_LINE2,
      (select FOOTER_LINE3 from CBS_LOOKUP_REG_NO where ou = operating_unit) FOOTER_LINE3,
      (select FOOTER_LINE4 from CBS_LOOKUP_REG_NO where ou = operating_unit) FOOTER_LINE4,
      (select FOOTER_LINE5 from CBS_LOOKUP_REG_NO where ou = operating_unit) FOOTER_LINE5,
      (select FOOTER_LINE6 from CBS_LOOKUP_REG_NO where ou = operating_unit) FOOTER_LINE6,
      period,
      lpo_ref,
      due_date,
      exch_rate,
      charge_description,
      product_type,

    --   case when SUM(nvl(quantity,0)) > f_get_bill_contract_maxcapqty(max(bill_no)) then
    --             SUM(nvl(quantity,0)) - f_get_bill_contract_maxcapqty(max(bill_no))
    --     else
    --         SUM(nvl(quantity,0))
    --     end AS quantity,

      nvl(SUM(quantity),0)   AS quantity,
     
      nvl(qty_uom,'-') AS qty_uom,
      nvl(rate,1) AS rate,
      nvl(rate_uom,'-') rate_uom,

  --> 28-05-24 S

      round(
      (case when f_get_ratetype(bill_no,max(bill_line_no)) = 'rate' then --SUM(nvl(amount,0)) = 0 then
          (case when currency != contract_currency and contract_currency != 'AED' then
              round(SUM(amount)/f_get_bill_convrate(bill_no),2)
              
          when (currency != contract_currency and contract_currency = 'AED') then
              round(SUM(amount)*f_get_bill_convrate(bill_no),2)

          else
              round((SUM(quantity)*rate),2)
          end)
          
      else
          (case when currency != contract_currency and contract_currency != 'AED' then
              round(SUM(amount)/f_get_bill_convrate(bill_no),2)
              
          when (currency != contract_currency and contract_currency = 'AED') then
              round(SUM(amount)*f_get_bill_convrate(bill_no),2)

          else
              round(SUM(amount),2)
          end) 
      end)                
      +
      round((round((case when f_get_ratetype(bill_no,max(bill_line_no)) = 'rate' then --SUM(nvl(amount,0)) = 0 then
          
          (case when currency != contract_currency then
              round((SUM(quantity)*rate)/f_get_bill_convrate(bill_no),2)
          else
              round((SUM(quantity)*rate),2)
          end)
      else
          (case when currency != contract_currency and contract_currency != 'AED' then
              round(SUM(amount)/f_get_bill_convrate(bill_no),2)
              
          when (currency != contract_currency and contract_currency = 'AED') then
              round(SUM(amount)*f_get_bill_convrate(bill_no),2)

          else
              round(SUM(amount),2)
          end) 
      end),2) * f_get_vat_calc(vat) / 100 ),2) 
      ,2)AS total,

  --> 28-05-24 E

      vat AS vat,

      round((round((case when f_get_ratetype(bill_no,max(bill_line_no)) = 'rate' then --SUM(nvl(amount,0)) = 0 then
          (case when currency != contract_currency then
              round((SUM(quantity)*rate)/f_get_bill_convrate(bill_no),2)
          else
              round((SUM(quantity)*rate),2)
          end)
      else
          (case when currency != contract_currency then
              round(SUM(amount)/f_get_bill_convrate(bill_no),2)
          else
              round(SUM(amount),2)
          end) 
      end),2) * f_get_vat_calc(vat) / 100 ),2) AS vat_amount,

      currency,

      (case when f_get_ratetype(bill_no,max(bill_line_no)) = 'rate' then --(SUM(nvl(amount,0)) = 0 and nvl(rate,0) > 0) then
          (case when currency != contract_currency then
              round((SUM(quantity)*rate)/f_get_bill_convrate(bill_no),2)
          else
            round((SUM(quantity)*rate),2)
          end)

      else

      --> 28-05-24 S

      (case when (currency != contract_currency and f_get_bill_convrate(bill_no) > 0 and contract_currency != 'AED') then
            round(SUM(amount)/f_get_bill_convrate(bill_no),2) 
          
          when (currency != contract_currency and contract_currency = 'AED') then
            round(SUM(amount)*f_get_bill_convrate(bill_no),2)
          
          else
             round(SUM(amount),2)
          end) 
      end)  AS amount,

      --> 28-05-24 E

      group_code,
      nvl(attribute1,'-') AS attribute1,
      nvl(attribute2,'-') AS attribute2,
      contract_currency,
      

  -->28-05-24 S
    
    (CASE WHEN contract_currency = 'USD' THEN --f_get_bill_convrate(bill.bill_no)
      (
        CASE WHEN f_get_bill_convrate(bill.bill_no) > ROUND(
                                                          NVL(
                                                              (SELECT NVL(MAX(CONVERSION_RATE), 1)
                                                               FROM cbs_bills_details_stg cbd
                                                               WHERE cbd.bill_no = bill.bill_no
                                                               AND NVL(CONVERSION_RATE, 1) <> 1),
                                                              1
                                                          ),
                                                          5
                                                      ) THEN f_get_bill_convrate(bill.bill_no)
          ELSE ROUND(
                      NVL(
                          (SELECT NVL(MAX(CONVERSION_RATE), 1)
                           FROM cbs_bills_details_stg cbd
                           WHERE cbd.bill_no = bill.bill_no
                           AND NVL(CONVERSION_RATE, 1) <> 1),
                          1
                      ),
                      5)
          END       
        )
    ELSE
      ROUND(
          NVL(
              (SELECT NVL(MAX(CONVERSION_RATE), 1)
               FROM cbs_bills_details_stg cbd
               WHERE cbd.bill_no = bill.bill_no
               AND NVL(CONVERSION_RATE, 1) <> 1),
              1
          ),
          5
      ) 
    
      END ) AS CONV_RATE_DISP,

  -->28-05-24 E

      round((round((case when f_get_ratetype(bill_no,max(bill_line_no)) = 'rate' then --SUM(nvl(amount,0)) = 0 then
          (case when currency != contract_currency then
              round((SUM(quantity)*rate)/f_get_bill_convrate(bill_no),2)
          else
              round((SUM(quantity)*rate),2)
          end)
      else
          (case when currency != contract_currency then
              round(SUM(amount)/f_get_bill_convrate(bill_no),2)
          else
              round(SUM(amount),2)
          end) 
      end),2) * f_get_vat_calc(vat) / 100 ),2) * f_get_bill_convrate(bill_no) AS vat_amount_disp

  FROM
      (SELECT BILL_TYPE, BILL_NO, PDF_SERIAL_NUMBER, BILL_DATE, STATUS, CUSTOMER_NAME, BILL_TO_ADDRESS, address1, address2, address3, address4,
      CITY, country, REGISTRATION_NUMBER, TAX_REG_NO, PERIOD, LPO_REF, DUE_DATE, exch_rate, CHARGE_DESCRIPTION, PRODUCT_TYPE, QUANTITY, QTY_UOM, RATE, RATE_UOM, TOTAL, VAT, VAT_AMOUNT, CURRENCY, AMOUNT, 
      --EQUIPMENT_TYPE, 
      GROUP_CODE, ATTRIBUTE1, ATTRIBUTE2, NVL(CONTRACT_CURRENCY,'AED') CONTRACT_CURRENCY, OPERATING_UNIT, SHIPMENT_ID, BILL_LINE_NO FROM CBS_BILL_DETAILS_PDF_VIEW 
      WHERE bill_no =:p0_bill_no
      and  ((bill_no not like 'CN%' and exists (select 1 FROM cbs_bills_details_stg WHERE bill_no = :p0_bill_no and charge_by Not in ('Month','Year') and rownum = 1)
      and charge_by Not in ('Month','Year')
      and f_get_ratetype(bill_no,bill_line_no) = 'rate') 
      or bill_no like 'CN%') ) bill
  GROUP BY
      bill_type,
      bill_no,
      pdf_serial_number,
      bill_date,
      status,
      customer_name,
      bill_to_address,
      address1,
      address2,
      address3,
      address4,    
      city,
      country,
      REGISTRATION_NUMBER,
      tax_reg_no,
      period,
      lpo_ref,
      due_date,
      exch_rate,
      charge_description,
      product_type,
      qty_uom,
      rate,
      rate_uom,
      vat,
      substr(vat,1,3),
      group_code,
      attribute1,
      attribute2,
      currency,
      contract_currency,
      operating_unit    
      having 
      (case when f_get_ratetype(bill_no,max(bill_line_no)) = 'rate' then --(SUM(nvl(amount,0)) = 0 and nvl(rate,0) > 0) then
          (case when currency != contract_currency then
              round((SUM(quantity)*rate)/f_get_bill_convrate(bill_no),2)
          else
              round((SUM(quantity)*rate),2)
          end)
      else
          (case when (currency != contract_currency and f_get_bill_convrate(bill_no) > 0 ) then
              round(SUM(amount)/f_get_bill_convrate(bill_no),2)
          else
              round(SUM(amount),2)
          end) 
      end) > 0 
  )  
  UNION ALL
  
  SELECT 
      bill_type, 
      operating_unit,
      bill_no,
      pdf_serial_number,
      bill_date,
      bill_heading,
      customer_name,
      bill_to_address,
      address1,
      address2,
      address3,
      address4,    
      city,
      country,
      REGISTRATION_NUMBER,
      tax_reg_no,
      ADDRESS,
      COMPANY_NAME_HEADER,
      HEADER_ADDRESS_LINE1,
      HEADER_ADDRESS_LINE2,
      FOOTER_LINE3,
      FOOTER_LINE4,
      FOOTER_LINE5,
      FOOTER_LINE6,
      period,
      lpo_ref,
      due_date,
      exch_rate,
      charge_description,
      product_type,
      quantity,
      qty_uom,
      rate,
      rate_uom,
      total,
      vat,
      vat_amount,
      currency,
      amount,
      round(SUM(amount) OVER (),2) AS NET_AMOUNT,
      round(SUM(vat_amount) OVER (),2) AS NET_VAT,
      round(SUM(total) OVER (),2) AS NET_TOTAL,
      group_code,
      attribute1,
      attribute2,
      contract_currency,
      CONV_RATE_DISP
  FROM (    
  SELECT
      bill_type, 
      operating_unit,
      bill_no,
      pdf_serial_number,
      bill_date,
      case when status like 'Draft%' then 'DRAFT - TAX INVOICE' else 'TAX INVOICE' end bill_heading,
      customer_name,
      bill_to_address,
      address1,
      address2,
      address3,
      address4,    
      city,
      country,
      REGISTRATION_NUMBER,
      (select TAX_REG_NO from CBS_LOOKUP_REG_NO where ou = operating_unit) tax_reg_no,    
      (select ADDRESS from CBS_LOOKUP_REG_NO where ou = operating_unit) ADDRESS,
      (select COMPANY_NAME_HEADER from CBS_LOOKUP_REG_NO where ou = operating_unit) COMPANY_NAME_HEADER,
      (select HEADER_ADDRESS_LINE1 from CBS_LOOKUP_REG_NO where ou = operating_unit) HEADER_ADDRESS_LINE1,
      (select HEADER_ADDRESS_LINE2 from CBS_LOOKUP_REG_NO where ou = operating_unit) HEADER_ADDRESS_LINE2,
      (select FOOTER_LINE3 from CBS_LOOKUP_REG_NO where ou = operating_unit) FOOTER_LINE3,
      (select FOOTER_LINE4 from CBS_LOOKUP_REG_NO where ou = operating_unit) FOOTER_LINE4,
      (select FOOTER_LINE5 from CBS_LOOKUP_REG_NO where ou = operating_unit) FOOTER_LINE5,
      (select FOOTER_LINE6 from CBS_LOOKUP_REG_NO where ou = operating_unit) FOOTER_LINE6,
      period,
      lpo_ref,
      due_date,
      exch_rate,
      charge_description,
      product_type,

      1   AS quantity,

      nvl(qty_uom,'-') AS qty_uom,
      
      --(case when rate = 0 then 0 else 1 end) AS rate,
      /*(case
        when contract_currency != 'AED' and currency = 'AED' then round(SUM(nvl(amount,0) / f_get_bill_convrate(bill_no)),2)
        when contract_currency = 'AED' and currency != 'AED' then round(SUM(nvl(amount,0) * f_get_bill_convrate(bill_no)),2)
        when contract_currency != 'AED' and currency != 'AED' then round(SUM(nvl(amount,0)),2)
        else round(SUM(nvl(amount,0)),2)
       end) AS rate,
       */
        (case 
          
          when currency != contract_currency and contract_currency != 'AED' then
              round(SUM(amount)/f_get_bill_convrate(bill_no),2)
              
          when (currency != contract_currency and contract_currency = 'AED') then
              round(SUM(amount)*f_get_bill_convrate(bill_no),2)
              
          else
              round(SUM(amount),2)
          end)  AS rate,

      nvl(rate_uom,'-') rate_uom,


  --> 28-05-24 S
      round(
          (case 
          
          when currency != contract_currency and contract_currency != 'AED' then
              round(SUM(amount)/f_get_bill_convrate(bill_no),2)
              
          when (currency != contract_currency and contract_currency = 'AED') then
              round(SUM(amount)*f_get_bill_convrate(bill_no),2)
              
          else
              round(SUM(amount),2)
          end)                     
      +
      round((round(
          (case 
          when currency != contract_currency and contract_currency != 'AED' then
              round(SUM(amount)/f_get_bill_convrate(bill_no),2)
          
          when currency != contract_currency then
              round(SUM(amount)*f_get_bill_convrate(bill_no),2)
          else
              round(SUM(amount),2)
          end) 
      ,2) * f_get_vat_calc(vat) / 100 ),2) 
      ,2) AS total,

  --> 28-05-24 S

      vat AS vat,

      round((round(
          (case when currency != contract_currency then
              round(SUM(amount)/f_get_bill_convrate(bill_no),2)
          else
              round(SUM(amount),2)
          end) 
      ,2) * f_get_vat_calc(vat) / 100 ),2) AS vat_amount,

      currency,

      (case when (currency != contract_currency and f_get_bill_convrate(bill_no) > 0 and contract_currency != 'AED') then
          round(SUM(amount)/f_get_bill_convrate(bill_no),2)
      
      when (currency != contract_currency and contract_currency = 'AED') then
         round(SUM(amount)*f_get_bill_convrate(bill_no),2)
      
      else
         round(SUM(amount),2)
      end) AS amount,

      group_code,
      nvl(attribute1,'-') AS attribute1,
      nvl(attribute2,'-') AS attribute2,
      contract_currency,

  -->28-05-24 S

   (CASE WHEN contract_currency = 'USD' THEN --f_get_bill_convrate(bill.bill_no)
      (
        CASE WHEN f_get_bill_convrate(bill.bill_no) > ROUND(
                                                          NVL(
                                                              (SELECT NVL(MAX(CONVERSION_RATE), 1)
                                                               FROM cbs_bills_details_stg cbd
                                                               WHERE cbd.bill_no = bill.bill_no
                                                               AND NVL(CONVERSION_RATE, 1) <> 1),
                                                              1
                                                          ),
                                                          5
                                                      ) THEN f_get_bill_convrate(bill.bill_no)
          ELSE ROUND(
                      NVL(
                          (SELECT NVL(MAX(CONVERSION_RATE), 1)
                           FROM cbs_bills_details_stg cbd
                           WHERE cbd.bill_no = bill.bill_no
                           AND NVL(CONVERSION_RATE, 1) <> 1),
                          1
                      ),
                      5)
          END        
        )
    ELSE
      ROUND(
          NVL(
              (SELECT NVL(MAX(CONVERSION_RATE), 1)
               FROM cbs_bills_details_stg cbd
               WHERE cbd.bill_no = bill.bill_no
               AND NVL(CONVERSION_RATE, 1) <> 1),
              1
          ),
          5
      ) 
    
      END ) AS CONV_RATE_DISP,

  -->28-05-24 E
      
      round((round(
          (case when currency != contract_currency then
              round(SUM(amount)/f_get_bill_convrate(bill_no),2)
          else
              round(SUM(amount),2)
          end) 
      ,2) * f_get_vat_calc(vat) / 100 ),2) * f_get_bill_convrate(bill_no) AS vat_amount_disp    
  FROM
      (SELECT 
          BILL_TYPE, 
          BILL_NO, 
          PDF_SERIAL_NUMBER, 
          BILL_DATE, 
          STATUS, 
          CUSTOMER_NAME, 
          BILL_TO_ADDRESS, 
          address1, 
          address2, 
          address3, 
          address4,
          CITY, 
          country, 
          REGISTRATION_NUMBER, 
          TAX_REG_NO, 
          PERIOD, 
          LPO_REF, 
          DUE_DATE, 
          exch_rate, 
          CHARGE_DESCRIPTION, 
          PRODUCT_TYPE, 
          QUANTITY, 
          QTY_UOM, 
          RATE, 
          RATE_UOM, 
          TOTAL, 
          VAT, 
          VAT_AMOUNT, 
          CURRENCY, 
          AMOUNT,
          GROUP_CODE, 
          ATTRIBUTE1, 
          ATTRIBUTE2, 
          NVL(CONTRACT_CURRENCY,'AED') CONTRACT_CURRENCY, 
          OPERATING_UNIT, 
          SHIPMENT_ID, 
          BILL_LINE_NO 
      FROM CBS_BILL_DETAILS_PDF_VIEW 
      WHERE bill_no = :p0_bill_no
      AND  ((bill_no not like 'CN%' and exists (select 1 FROM cbs_bills_details_stg WHERE bill_no = :p0_bill_no and charge_by Not in ('Month','Year') and rownum = 1)
      AND charge_by Not in ('Month','Year')
      AND f_get_ratetype(bill_no,bill_line_no) = 'actuals') 
      OR bill_no like 'CN%') ) bill
      GROUP BY    
      bill_type,
      bill_no,
      pdf_serial_number,
      bill_date,
      status,
      customer_name,
      bill_to_address,
      address1,
      address2,
      address3,
      address4,    
      city,
      country,
      REGISTRATION_NUMBER,
      tax_reg_no,
      period,
      lpo_ref,
      due_date,
      exch_rate,
      charge_description,
      product_type,
      qty_uom,
      --rate,
      rate_uom,
      vat,
      substr(vat,1,3),
      group_code,
      attribute1,
      attribute2,
      currency,
      contract_currency,
      operating_unit    
      having 
          (case when (currency != contract_currency and f_get_bill_convrate(bill_no) > 0 ) then
              round(SUM(amount)/f_get_bill_convrate(bill_no),2)
          else
              round(SUM(amount),2)
          end) > 0 
      )
  )
  GROUP BY
      bill_type, 
      operating_unit,
      bill_no,
      pdf_serial_number,
      bill_date,
      bill_heading,
      customer_name,
      bill_to_address,
      address1, address2, address3, address4,
      city,
      country,
      REGISTRATION_NUMBER,
      tax_reg_no,
      ADDRESS,
      COMPANY_NAME_HEADER,
      HEADER_ADDRESS_LINE1,
      HEADER_ADDRESS_LINE2,
      FOOTER_LINE3,
      FOOTER_LINE4,
      FOOTER_LINE5,
      FOOTER_LINE6,
      period,
      lpo_ref,
      due_date,
      exch_rate,
      charge_description,
      product_type,
      quantity,
      qty_uom,
      rate,
      rate_uom,
      total,
      vat,
      vat_amount,
      currency,
      amount,     
      group_code,
      attribute1,
      attribute2, 
      contract_currency,
      CONV_RATE_DISP
  ) bp
  UNION ALL
  SELECT BILL_TYPE, OPERATING_UNIT, BILL_NO, PDF_SERIAL_NUMBER, BILL_DATE, BILL_HEADING, CUSTOMER_NAME, 
  BILL_TO_ADDRESS, ADDRESS1, ADDRESS2, ADDRESS3, ADDRESS4, CITY, COUNTRY, REGISTRATION_NUMBER, TAX_REG_NO, ADDRESS, 
  COMPANY_NAME_HEADER, HEADER_ADDRESS_LINE1, HEADER_ADDRESS_LINE2, FOOTER_LINE3, FOOTER_LINE4, FOOTER_LINE5, FOOTER_LINE6, 
  PERIOD, LPO_REF, DUE_DATE, exch_rate,
  CHARGE_DESCRIPTION, PRODUCT_TYPE, QUANTITY,QTY_UOM, RATE, RATE_UOM, TOTAL, VAT, VAT_AMOUNT, 
  CURRENCY, AMOUNT, NET_AMOUNT, NET_VAT, NET_TOTAL, NET_TOTAL_WORDS, NET_AMOUNT_CHART, NET_VAT_CHART, NET_TOTAL_CHART, 
  NET_AMOUNT_CNV, NET_VAT_CNV, NET_TOTAL_CNV, GROUP_CODE, ATTRIBUTE1, ATTRIBUTE2, CONTRACT_CURRENCY, CONV_RATE_DISP, VAT_AMOUNT_DISP, 
  CARBON_EMISSION, CURR_DISP
  FROM CBS_BILL_PDF_AVERAGE_VIEW
  WHERE bill_no = :p0_bill_no
  ORDER BY BILL_TO_ADDRESS;
